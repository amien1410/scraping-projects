# -*- coding: utf-8 -*-
"""elene-scraper-energysage.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_Lv0g0DDsM-rQpymkQQhr5Z_IaWWT_eL
"""

# load libraries
import requests
import json
import pandas as pd
from bs4 import BeautifulSoup
from google.colab import files

# get every urls of suppliers from energysage
supplier_list = list()
for x in range(1, 170):

  # page number url
  url = 'https://www.energysage.com/supplier/search?selected_facets=technology_types:Solar%20PV&page=' + str(x)
  
  # request data from url
  res = requests.get(url)
  data = BeautifulSoup(res.text)

  links = data.find_all('a', class_="supplier-name")
  links = [l.get('href') for l in links]
  # links = [l for l in links if (l and '/supplier/' in l)]

  # remove duplicate link
  for item in links:
      if item not in supplier_list:
          supplier_list.append(item)

# print the number of urls we got
len(supplier_list)

result = {}
for x in range(len(supplier_list)):
  # request data from url
  res = requests.get('https://www.energysage.com' + supplier_list[x])

  # modify data response with bs4
  data = BeautifulSoup(res.text)

  # get all information
  company_name = data.select('span[itemprop=name]')[0].get_text()

  company_logo = data.select('img[itemprop=image]')
  if len(company_logo) != 0:
    company_logo = company_logo[0].get('src')
  else:
    company_logo = 'No data'

  expert_rating =data.select('img.block-energysage-approved')
  if len(expert_rating) != 0:
    expert_rating = expert_rating[0].get('alt')
  else:
    expert_rating = 'No expert rating'

  customer_rating = data.select('meta[itemprop=ratingValue]')
  if len(customer_rating) != 0:
    customer_rating = customer_rating[0].get('content')
  else:
    customer_rating = 'No data'

  customer_reviews_number = data.select('meta[itemprop=reviewCount]')
  if len(customer_reviews_number) != 0:
    customer_reviews_number = customer_reviews_number[0].get('content')
  else:
    customer_reviews_number = 'No data'

  establishment = data.select('div[itemprop=foundingDate]')
  if len(establishment) != 0:
    establishment = establishment[0].get_text()
  else:
    establishment = 'No data'

  services = data.select('#additionalServicesHolder')
  if len(services) > 0:
    services = services[0].find_all('li')
    services = [l.contents[3].get_text() for l in services]
    services = ', '.join(services)
  else:
      services = 'No additional services'

  techs = data.select('#technologyOfferedHolder')
  if len(techs) > 0:
    techs = techs[0].find_all('li')
    techs = [l.contents[3].get_text() for l in techs]
    techs = ', '.join(techs)
  else:
      techs = 'No technology info'

  industry_certifications = data.select('#industryCertificationsHolder')
  if len(industry_certifications) > 0:
    industry_certification = industry_certifications[0].find_all('li')
    industry_certifications = [l.contents[1].find('img').get('alt') for l in industry_certifications]
    industry_certifications = ', '.join(industry_certifications)
  else:
    industry_certifications = 'No certifications added'

  headquarters = address = data.select('div[itemprop=address]')
  if len(headquarters) > 0:
    headquarters = headquarters[0].get_text().strip().replace('\n', ' ')
  else:
    headquarters = 'No address info'

  # brands
  brands = data.select('#manufacturerPartnershipsHolder img')
  brands2 = [l.get('alt') for l in brands]
  brands2 = ', '.join(brands2)
  if brands2 == '':
    brands2 = 'No brands'

  # brand logo
  b_logos = [l.get('data-src') for l in brands]
  b_logos = ', '.join(b_logos)
  if b_logos == '':
    b_logos = 'No brand logos'

  # append to result dict
  result[x] = {
      "url": 'https://www.energysage.com' + supplier_list[x],
      "company_name": company_name,
      "company_logo": company_logo,
      "expert_rating": expert_rating,
      "customer_rating": customer_rating,
      "customer_reviews_number": customer_reviews_number,
      "services": services,
      "techs": techs,
      "industry_certifications": industry_certifications,
      "headquarters": headquarters,
      "establishment": establishment,
      "brands": brands2,
      "b_logos": b_logos,
  }
  print('No: ' + str(x+1) + '- Url: ' + supplier_list[x])

with open("result.json", "w") as outfile:
    json.dump(result, outfile)
files.download('result.json')

headers = [ "url", "company_name", "company_logo", "expert_rating", "customer_rating", "customer_reviews_number", "services", "techs", "industry_certifications", "headquarters", "establishment", "brands","b_logos"]
df = pd.DataFrame.from_dict(result, orient='index')
df.to_excel("result.xlsx")
files.download('result.xlsx')

# request data from url
# res = requests.get('https://www.energysage.com/supplier/108/sunpower/')
res = requests.get('https://www.energysage.com/supplier/20457/greenbrilliance-llc/')
# res = requests.get('https://www.energysage.com/supplier/20136/js-solar/')

# modify data response with bs4
data = BeautifulSoup(res.text)

address = data.select('div[itemprop=address]')[1].get_text().strip().replace('\n', ' ')
# address = [l.contents[1].find('img').get('alt') for l in address]
# address = ', '.join(address)
# if address == '':
#     address = 'No certificatios added'
address

company_name = data.select('span[itemprop=name]')[0].get_text()

company_logo = data.select('img[itemprop=image]')
if len(company_logo) != 0:
  company_logo = company_logo[0].get('src')
else:
  company_logo = 'No data'

expert_rating =data.select('img.block-energysage-approved')
if len(expert_rating) != 0:
  expert_rating = expert_rating[0].get('alt')
else:
  expert_rating = 'No expert rating'

customer_rating = data.select('meta[itemprop=ratingValue]')
if len(customer_rating) != 0:
  customer_rating = customer_rating[0].get('content')
else:
  customer_rating = 'No data'

customer_reviews_number = data.select('meta[itemprop=reviewCount]')
if len(customer_reviews_number) != 0:
  customer_reviews_number = customer_reviews_number[0].get('content')
else:
  customer_reviews_number = 'No data'

establishment = data.select('div[itemprop=foundingDate]')
if len(establishment) != 0:
  establishment = establishment[0].get_text()
else:
  establishment = 'No data'

services = data.select('#additionalServicesHolder')[0].find_all('li')
services = [l.contents[3].get_text() for l in services]
services = ', '.join(services)
if services == '':
    services = 'No additional services'

techs = data.select('#technologyOfferedHolder')[0].find_all('li')
techs = [l.contents[3].get_text() for l in techs]
techs = ', '.join(techs)
if techs == '':
    techs = 'No technology info'

industry_certifications = data.select('#industryCertificationsHolder')[0].find_all('li')
industry_certifications = [l.contents[1].find('img').get('alt') for l in industry_certifications]
industry_certifications = ', '.join(industry_certifications)
if industry_certifications == '':
    industry_certifications = 'No certificatios added'

headquarters = address = data.select('div[itemprop=address]')
if len(headquarters) > 0:
  headquarters = headquarters[0].get_text().strip().replace('\n', ' ')
else:
  headquarters = 'No address info'

# brands
brands = data.select('#manufacturerPartnershipsHolder img')
brands2 = [l.get('alt') for l in brands]
brands2 = ', '.join(brands2)
if brands2 == '':
  brands2 = 'No brands'

# brand logo
b_logos = [l.get('data-src') for l in brands]
b_logos = ', '.join(b_logos)
if b_logos == '':
  b_logos = 'No brand logos'

# append to result dict
dummy = {
    "company_name": company_name,
    "company_logo": company_logo,
    "expert_rating": expert_rating,
    "customer_rating": customer_rating,
    "customer_reviews_number": customer_reviews_number,
    "services": services,
    "techs": techs,
    "industry_certifications": industry_certifications,
    "headquarters": headquarters,
    "establishment": establishment,
    "brands": brands2,
    "b_logos": b_logos,
}

dummy